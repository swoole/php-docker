#!/usr/bin/env php
<?php
function copy_dir($src, $dst)
{
    if (is_link($src)) {
        symlink(readlink($src), $dst);
    } elseif (is_dir($src)) {
        @mkdir($dst);
        foreach (scandir($src) as $file) {
            if ($file != '.' && $file != '..') {
                copy_dir("$src/$file", "$dst/$file");
            }
        }
    } elseif (is_file($src)) {
        copy($src, $dst);
    } else {
        echo "WARNING: Cannot copy $src (unknown file type)\n";
    }
}

function curlGet($url, $gzip = true)
{
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    if ($gzip) {
        curl_setopt($ch, CURLOPT_HTTPHEADER, ['Accept-Encoding: gzip']);
        curl_setopt($ch, CURLOPT_ENCODING, "gzip");
    }
    $output = curl_exec($ch);
    curl_close($ch);
    return $output;
}

function replace_hook_string(string $string, $from, $to): string
{
    $walk = function (&$value) {
        $value = "{{{$value}}}";
    };
    if (is_string($from)) {
        $from = "{{{$from}}}";
    } elseif (is_array($from)) {
        array_walk($from, $walk);
    }
    return str_replace($from, $to, $string);
}

// generate released
$released_template = file_get_contents(__DIR__ . '/templates/released/Dockerfile');
$tags = [];
$tags_g = ['7.0', '7.1', '7.2', 'rc'];
array_walk($tags_g, function ($tag) use (&$tags) {
    $tags[] = $tag;
});
$tags[] = 'latest';
foreach ($tags as $tag) {
    $content = replace_hook_string($released_template, 'tag', $tag);
    @mkdir(__DIR__ . '/' . $tag);
    file_put_contents(__DIR__ . '/' . $tag . '/Dockerfile', $content);
}

$tags_g = ['7.0', '7.1', '7.2'];
foreach ($tags_g as $tag) {
    $stretch_dir = __DIR__ . '/thirdparty/php/' . $tag . '/stretch/cli/';
    $dev_dir = __DIR__ . '/' . $tag . '-dev/';
    copy_dir($stretch_dir, $dev_dir);
    $content = file_get_contents($dev_dir . '/Dockerfile');
    $content = str_replace("./configure \\\n",
        "./configure \\\n# dev version with memory leak check\n		--enable-debug \\\n", $content);
    $end = <<<'DOCKERFILE'
ENTRYPOINT ["docker-php-entrypoint"]
##<autogenerated>##
CMD ["php", "-a"]
##</autogenerated>##
DOCKERFILE;
    $content = str_replace($end,
        "##<custom>##\n" . file_get_contents(__DIR__ . '/templates/dev/Dockerfile') . "\n##</custom>##\n\n" . $end,
        $content
    );

    file_put_contents($dev_dir . '/Dockerfile', $content);
}