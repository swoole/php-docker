#!/usr/bin/env php
<?php

const alpine_version = '3.18';
const debian_version = 'bullseye';

class DockerfileGenerator
{
    protected $debian_versions = ['8.1', '8.2', '8.3', '8.4'];
    protected $alpine_versions = ['8.1-alpine', '8.2-alpine', '8.3-alpine', '8.4-alpine'];
    protected $alpine_zts_versions = ['8.1-zts-alpine', '8.2-zts-alpine', '8.3-zts-alpine', '8.4-zts-alpine'];
    protected $debian_zts_versions = ['8.1-zts', '8.2-zts', '8.3-zts', '8.4-zts'];

    protected $baseImageTag = [
        '8.4' => '8.4.0RC2-bullseye',
        '8.4-zts' => '8.4.0RC2-zts-bullseye',
        '8.4-alpine' => '8.4.0RC2-alpine3.20',
        '8.4-zts-alpine' => '8.4.0RC2-zts-alpine3.20',
    ];

    private function render($version, $type)
    {
        $v = strstr($version, '-', true) ?: $version;
        $CFLAGS = 'CFLAGS="$CFLAGS -D_GNU_SOURCE"';

        $alpine = str_contains($version, 'alpine');

        if (isset($this->baseImageTag[$version])) {
            $tag = $this->baseImageTag[$version];
        } else {
            if (!$alpine) {
                $tag = $version . '-' . debian_version;
            } else {
                $tag = $version . alpine_version;
            }
        }

        ob_start();
        include __DIR__ . '/templates/' . $type . '.php';
        $content = ob_get_clean();
        $dockerFile = __DIR__ . '/' . $version . '/Dockerfile';

        if (!is_dir(dirname($dockerFile))) {
            mkdir(dirname($dockerFile));
        }
        file_put_contents($dockerFile, $content);
    }

    public function make()
    {
        foreach ($this->debian_versions as $v) {
            $this->render($v, 'debian');
        }
        foreach ($this->alpine_versions as $v) {
            $this->render($v, 'alpine');
        }
        foreach ($this->debian_zts_versions as $v) {
            $this->render($v, 'debian');
        }
        foreach ($this->alpine_zts_versions as $v) {
            $this->render($v, 'alpine');
        }

        echo "Generate Dockerfile Success!\n";
    }
}

(new DockerfileGenerator())->make();